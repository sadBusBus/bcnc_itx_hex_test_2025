name: Java CI/CD - Arquitectura Hexagonal

on:
    push:
        branches: ['*', '!master', '!main']
    pull_request:
        branches: ['*', '!master', '!main']

jobs:
    validate:
        name: Validación de Código
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'
                  cache: maven

            - name: Verificación de dependencias
              run: mvn dependency:analyze -DfailOnWarning=true

            - name: Análisis de seguridad con OWASP
              run: mvn org.owasp:dependency-check-maven:check

            - name: Verificación de estilo de código
              run: mvn spotless:check

            - name: Análisis estático con SonarCloud
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    test:
        name: Pruebas Unitarias e Integración
        needs: validate
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'
                  cache: maven

            - name: Ejecutar pruebas unitarias
              run: mvn test

            - name: Ejecutar pruebas de integración
              run: mvn verify -DskipUnitTests=true

            - name: Generar informe de cobertura
              run: mvn jacoco:report

            - name: Publicar informes de pruebas
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports-${{ github.run_id }}
                  path: |
                      **/target/surefire-reports/
                      **/target/failsafe-reports/
                      **/target/site/jacoco/
                  retention-days: 10

    build:
        name: Construcción y Empaquetado
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'
                  cache: maven

            - name: Build con Maven (sin tests)
              run: mvn clean install -DskipTests

            - name: Construir imagen Docker
              run: |
                  docker build -t bcnc_itx_test:${{ github.sha }} -f boot/Dockerfile .

            - name: Escanear vulnerabilidades en imagen Docker
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: bcnc_itx_test:${{ github.sha }}
                  format: 'table'
                  exit-code: '1'
                  severity: 'CRITICAL,HIGH'

            - name: Empaquetar artefactos
              run: |
                  mkdir -p deployment
                  cp boot/target/boot-*.jar deployment/app.jar

            - name: Publicar artefactos para despliegue
              uses: actions/upload-artifact@v4
              with:
                  name: deployment-package
                  path: deployment/
                  retention-days: 7
